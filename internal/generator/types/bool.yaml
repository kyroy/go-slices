types:
- package: bools
  type: bool
tests:
  map:
  - name: basic
    in: '{true, false, true}'
    func: '{ return !x }'
    out: '{false, true, false}'
  filter:
  - name: basic
    in: '{true, false, true}'
    func: '{ return x }'
    out: '{true, true}'
  reduce:
  - name: and_false
    in: '{true, false, true}'
    func: '{ return sum && value }'
    neutral: 'true'
    out: 'false'
  - name: and_true
    in: '{true, true, true}'
    func: '{ return sum && value }'
    neutral: 'true'
    out: 'true'
  - name: or_true
    in: '{false, false, true}'
    func: '{ return sum || value }'
    neutral: 'false'
    out: 'true'
  - name: or_false
    in: '{false, false, false}'
    func: '{ return sum || value }'
    neutral: 'false'
    out: 'false'
  unique:
  - name: basic
    in: '{false, false, true, true}'
    out: '{false, true}'
  intersect:
  - name: same
    in: '{false, true, false}'
    more: '{{false, true, false}}'
    out: '{false, true, false}'
  - name: multiple
    in: '{false, true, false, true}'
    more: '{{false, true, false, false}, {false, true, false, true, false}}'
    out: '{false, true, false}'
  contains:
  - name: contains
    in: '{true, false, true}'
    elem: 'false'
    out: 'true'
  - name: not_contains
    in: '{true, true, true}'
    elem: 'false'
    out: 'false'
  indexof:
  - name: contains
    in: '{true, false, true}'
    elem: 'false'
    out: '1'
  - name: not_contains
    in: '{true, true, true}'
    elem: 'false'
    out: '-1'
  find:
  - name: contains
    in: '{true, false, true}'
    func: '{ return x }'
    out: 'true'
    found: true
  - name: not_contains
    in: '{false, false, false}'
    func: '{ return x }'
    out: 'true'
    found: false
  convert:
    strings:
    - name: basic
      in: '{true, false}'
      func: 'return fmt.Sprint(x)'
      out: '{"true", "false"}'
    interfaces:
    - name: basic
      in: '{false, true}'
      func: 'return x'
      out: '{false, true}'
    float32s:
    - name: basic
      in: '{false, true}'
      func: 'var y float32; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    float64s:
    - name: basic
      in: '{false, true}'
      func: 'var y float64; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    ints:
    - name: basic
      in: '{false, true}'
      func: 'var y int; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    int8s:
    - name: basic
      in: '{false, true}'
      func: 'var y int8; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    int16s:
    - name: basic
      in: '{false, true}'
      func: 'var y int16; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    int32s:
    - name: basic
      in: '{false, true}'
      func: 'var y int32; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    int64s:
    - name: basic
      in: '{false, true}'
      func: 'var y int64; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    uints:
    - name: basic
      in: '{false, true}'
      func: 'var y uint; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    uint8s:
    - name: basic
      in: '{false, true}'
      func: 'var y uint8; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    uint16s:
    - name: basic
      in: '{false, true}'
      func: 'var y uint16; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    uint32s:
    - name: basic
      in: '{false, true}'
      func: 'var y uint32; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    uint64s:
    - name: basic
      in: '{false, true}'
      func: 'var y uint64; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    bytes:
    - name: basic
      in: '{false, true}'
      func: 'var y byte; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
    runes:
    - name: basic
      in: '{false, true}'
      func: 'var y rune; if x { y = 2 } else { y = 1 }; return y'
      out: '{1, 2}'
