interfaces:
  type: interface{}
  map:
  - name: basic
    in: '{"a", 1, "1", 2}'
    func: '{ switch a := x.(type) { case string: return a + "!"; case int: return a + 1; default: return a } }'
    out: '{"a!", 2, "1!", 3}'
  filter:
  - name: basic
    in: '{"a", 1, "1", 2}'
    func: '{ switch x.(type) { case string: return true; default: return false } }'
    out: '{"a", "1"}'
  reduce:
  - name: basic
    in: '{"a", 1, "1", 2}'
    func: '{ return fmt.Sprint(sum) + fmt.Sprint(value) }'
    neutral: '""'
    out: '"a112"'
  unique:
  - name: basic
    in: '{"a", 1, "1", 1, 2, "a"}'
    out: '{"a", 1, "1", 2}'
strings:
  type: string
  map:
  - name: basic
    in: '{"a", "b", "c", "d"}'
    func: '{ return x + "!" }'
    out: '{"a!", "b!", "c!", "d!"}'
  filter:
  - name: basic
    in: '{"a", "b", "c", "d"}'
    func: '{ return x > "b" }'
    out: '{"c", "d"}'
  reduce:
  - name: basic
    in: '{"a", "b", "c", "d"}'
    func: '{ return sum + value }'
    neutral: '""'
    out: '"abcd"'
  unique:
  - name: basic
    in: '{"a", "b", "a", "c", "c", "d"}'
    out: '{"a", "b", "c", "d"}'
bools:
  type: bool
  map:
  - name: basic
    in: '{true, false, true}'
    func: '{ return !x }'
    out: '{false, true, false}'
  filter:
  - name: basic
    in: '{true, false, true}'
    func: '{ return x }'
    out: '{true, true}'
  reduce:
  - name: and_false
    in: '{true, false, true}'
    func: '{ return sum && value }'
    neutral: 'true'
    out: 'false'
  - name: and_true
    in: '{true, true, true}'
    func: '{ return sum && value }'
    neutral: 'true'
    out: 'true'
  - name: or_true
    in: '{false, false, true}'
    func: '{ return sum || value }'
    neutral: 'false'
    out: 'true'
  - name: or_false
    in: '{false, false, false}'
    func: '{ return sum || value }'
    neutral: 'false'
    out: 'false'
  unique:
  - name: basic
    in: '{false, false, true, true}'
    out: '{false, true}'
uint8s:
  type: uint8
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
uint16s:
  type: uint16
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
uint32s:
  type: uint32
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
uint64s:
  type: uint64
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
int8s:
  type: int8
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
int16s:
  type: int16
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
int32s:
  type: int32
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
int64s:
  type: int64
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
bytes:
  type: byte
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
float32s:
  type: float32
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x <= 3.4 }'
    out: '{1, 2, 3, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
float64s:
  type: float64
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x <= 3.4 }'
    out: '{1, 2, 3, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
runes:
  type: rune
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
ints:
  type: int
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
uints:
  type: uint
  map:
  - name: basic
    in: '{1, 3, 4, 6}'
    func: '{ return x + 1 }'
    out: '{2, 4, 5, 7}'
  filter:
  - name: basic
    in: '{1, 2, 3, 4, 2}'
    func: '{ return x%2 == 0 }'
    out: '{2, 4, 2}'
  reduce:
  - name: basic
    in: '{1, 3, 4}'
    func: '{ return sum + value }'
    neutral: '0'
    out: '8'
  unique:
  - name: basic
    in: '{1, 3, 4, 6, 3, 2, 1}'
    out: '{1, 3, 4, 6, 2}'
    